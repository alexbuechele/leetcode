//3. Longest Substring Without Repeating Characters

int lengthOfLongestSubstring(char* s) {
    int lastcharindex[256];
    for (int i = 0; i < 256; i++)
    {
        lastcharindex[i] = -1;
    }
    // an array to keep track of the last instance of each char
    
    int start = 0;
    int longest = 0;
    int x = 0;
    
    while(s[x])
    {
        //test to see if the current char is included in the current substring defined by start and x
        if (lastcharindex[(int)(s[x])] >= start)
        {
            
            if (x - start > longest)
            {
                longest = x - start;
            }
            start = lastcharindex[(int)(s[x])] + 1;
            
        }
        lastcharindex[(int)(s[x])] = x;
        x++;
    }
    if (x - start > longest)
    {
        longest = x - start;
    }
    return longest;
}
